package ir.maktabSharif.GUI;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import org.apache.log4j.Logger;

import ir.maktabSharif.Controller.UserRestful;
import ir.maktabSharif.Model.EventLog;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JButton;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.SystemColor;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import java.awt.event.ActionEvent;

public class LoginPage extends JFrame {

	private JPanel contentPane;
	private JTextField textFieldUsername;
	private JTextField textFieldPassword;
	private JTextField textFieldAddress;

	
	
	private final static Logger logger=Logger.getLogger(LoginPage.class);
	EventLog _eventLog=new EventLog();
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					LoginPage frame = new LoginPage();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public LoginPage() {
		setBackground(SystemColor.activeCaption);
		setTitle("Login Page");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 262, 249);
		contentPane = new JPanel();
		contentPane.setBackground(SystemColor.activeCaption);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JPanel panel = new JPanel();
		panel.setBackground(new Color(204, 204, 255));
		panel.setBounds(10, 11, 226, 186);
		contentPane.add(panel);
		panel.setLayout(null);

		JLabel lblUsername = new JLabel("Username :");
		lblUsername.setBounds(10, 30, 97, 14);
		panel.add(lblUsername);

		JLabel lblPassword = new JLabel("Password :");
		lblPassword.setBounds(10, 69, 97, 14);
		panel.add(lblPassword);

		JLabel lblIp = new JLabel("IP / Address : ");
		lblIp.setBounds(10, 110, 97, 14);
		panel.add(lblIp);

		JButton btnLogin = new JButton("Login");
		btnLogin.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				try {
					if (textFieldAddress.getText() != "") {
						URL url = new URL(
								"" + textFieldAddress.getText() + "/FinalProject_PhoneBookServer1/rest/user/login");
						HttpURLConnection conn = (HttpURLConnection) url.openConnection();
						conn.setDoOutput(true);
						conn.setRequestMethod("POST");
						conn.setRequestProperty("Content-Type", "application/json");

						String input = "{\"username\":\" "+ textFieldUsername.getText()+" \",\"password\":\" "+ textFieldPassword.getText()+" \"  }";
						logger.info("user .................................." +input.toString());
						
						OutputStream os = conn.getOutputStream();
						os.write(input.getBytes());

						if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
							JOptionPane.showMessageDialog(null, "HTTP code : " + conn.getResponseCode());
						}
						if (conn.getResponseCode() == 200) {
							new AddContact().setVisible(true);
						}

						os.flush();
						conn.disconnect();
					}
					else
					{
						JOptionPane.showMessageDialog(null, "complete ip/port info");
					}
				} catch (MalformedURLException e) {

					e.printStackTrace();

				} catch (IOException e) {

					e.printStackTrace();

				}
			}

		});
		btnLogin.setBounds(117, 152, 89, 23);
		panel.add(btnLogin);

		textFieldUsername = new JTextField();
		textFieldUsername.setBounds(117, 24, 86, 20);
		panel.add(textFieldUsername);
		textFieldUsername.setColumns(10);

		textFieldPassword = new JTextField();
		textFieldPassword.setBounds(117, 63, 86, 20);
		panel.add(textFieldPassword);
		textFieldPassword.setColumns(10);

		textFieldAddress = new JTextField();
		textFieldAddress.setBounds(117, 104, 86, 20);
		panel.add(textFieldAddress);
		textFieldAddress.setColumns(10);
	}
}
